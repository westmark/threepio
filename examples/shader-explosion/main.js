var container,renderer,scene,camera,mesh;var start=Date.now(),stats;var fov=30;window.addEventListener('load',init);function init(){container=document.getElementById('container');scene=new THREE.Scene();bkgScene=new THREE.Scene();camera=new THREE.PerspectiveCamera(fov,window.innerWidth/window.innerHeight,1,10000);camera.position.z=100;camera.target=new THREE.Vector3(0,0,0);scene.add(camera);bkgCamera=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-10000,10000);bkgScene.add(bkgCamera);var bkgShader=new THREE.ShaderMaterial({uniforms:{tDiffuse:{type:"t",value:0,texture:THREE.ImageUtils.loadTexture('bkg.png')},resolution:{type:"v2",value:new THREE.Vector2(window.innerWidth,window.innerHeight)}},vertexShader:document.getElementById('vertexShader').textContent,fragmentShader:document.getElementById('fs_Gradient').textContent,depthWrite:false,});quad=new THREE.Mesh(new THREE.PlaneGeometry(window.innerWidth,window.innerHeight),bkgShader);quad.position.z=-100;quad.rotation.x=Math.PI/2;bkgScene.add(quad);material=new THREE.ShaderMaterial({uniforms:{tExplosion:{type:"t",value:0,texture:THREE.ImageUtils.loadTexture('explosion.png')},time:{type:"f",value:0.0},weight:{type:"f",value:10.0}},vertexShader:document.getElementById('vertexShader').textContent,fragmentShader:document.getElementById('fragmentShader').textContent});mesh=new THREE.Mesh(new THREE.IcosahedronGeometry(20,5),material);scene.add(mesh);renderer=new THREE.WebGLRenderer();renderer.setSize(window.innerWidth,window.innerHeight);renderer.autoClear=false;container.appendChild(renderer.domElement);container.addEventListener('mousedown',onMouseDown,false);container.addEventListener('mousemove',onMouseMove,false);container.addEventListener('mouseup',onMouseUp,false);container.addEventListener('mousewheel',onMouseWheel,false);container.addEventListener('DOMMouseScroll',onMouseWheel,false);window.addEventListener('resize',onWindowResize,false);stats=new Stats();stats.domElement.style.position='absolute';stats.domElement.style.top='0px';render();}
function onWindowResize(){renderer.setSize(window.innerWidth,window.innerHeight);camera.projectionMatrix.makePerspective(fov,window.innerWidth/window.innerHeight,1,1100);}
function onMouseWheel(event){if(event.wheelDeltaY){fov-=event.wheelDeltaY*0.01;}else if(event.wheelDelta){fov-=event.wheelDelta*0.05;}else if(event.detail){fov+=event.detail*1.0;}
camera.projectionMatrix.makePerspective(fov,window.innerWidth/window.innerHeight,1,1100);}
var onMouseDownMouseX=0,onMouseDownMouseY=0,lon=0,onMouseDownLon=0,lat=0,onMouseDownLat=0,phi=0,theta=0;lat=15,isUserInteracting=false;function onMouseDown(event){event.preventDefault();isUserInteracting=true;onPointerDownPointerX=event.clientX;onPointerDownPointerY=event.clientY;onPointerDownLon=lon;onPointerDownLat=lat;}
function onMouseMove(e){if(isUserInteracting){lon=(e.clientX-onPointerDownPointerX)*0.1+onPointerDownLon;lat=(e.clientY-onPointerDownPointerY)*0.1+onPointerDownLat;}}
function onMouseUp(event){isUserInteracting=false;}
var scale=0;function render(){material.uniforms['time'].value=.00025*(Date.now()-start);scale+=.005;scale%=2;lat=Math.max(-85,Math.min(85,lat));phi=(90-lat)*Math.PI/180;theta=lon*Math.PI/180;camera.position.x=100*Math.sin(phi)*Math.cos(theta);camera.position.y=100*Math.cos(phi);camera.position.z=100*Math.sin(phi)*Math.sin(theta);camera.lookAt(scene.position);renderer.render(scene,camera);stats.update();requestAnimationFrame(render);}
